{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","react_default","a","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","concat","dist","to","title","aria-label","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","length","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","react_router_dist","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.35c22f20.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n    // const [myStyle, setmyStyle] = useState({\r\n    //     color: 'white',\r\n    //     backgroundColor:'black'\r\n    // })\r\n    let myStyle = {\r\n        color: props.mode==='dark'?'white':'black',\r\n        backgroundColor: props.mode ==='dark'?'black':'white'\r\n\r\n    }\r\n    \r\n\r\n\r\n  return (\r\n    <div className=\"container\" style={myStyle}>\r\n        <h1 className=\"my-3\">About us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button className=\"accordion-button\" style ={myStyle}  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                    Accordion Item #1\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style ={myStyle} >\r\n                    <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button className=\"accordion-button collapsed\" style ={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                    Accordion Item #2\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style ={myStyle} >\r\n                    <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button className=\"accordion-button collapsed\" style ={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                    Accordion Item #3\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\"style ={myStyle} >\r\n                    <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n     </div>\r\n     \r\n </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n ","import React from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    \r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"about\">About </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"contact\">Contact</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"faq\">FaQ</Link>\r\n          </li>\r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enabel DarkMode</label>\r\n        </div>\r\n      </div> \r\n    </div>\r\n  </nav>\r\n  \r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = ()=>{\r\n    //console.log(\"Uppercase was clicked \" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to uppercase!\", \"success\");\r\n\r\n  }\r\n  const handleLoClick = ()=>{\r\n    //console.log(\"LowerCase was clicked \" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to LowerCase!\",\"success\");\r\n\r\n  }\r\n  const handleClearClick = ()=>{\r\n    let newText = '';\r\n    setText(newText)\r\n    props.showAlert(\"Text Cleared\",\"success\");\r\n  }\r\n  const handleCopyClick = ()=>{\r\n    console.log(\"I am Copy\")\r\n    let newText = document.getElementById(\"myBox\");\r\n    newText.select();\r\n    navigator.clipboard.writeText(newText.value);\r\n    document.getSelection().removeAllRanges();\r\n    props.showAlert(\"Copied to Clipboard!\",\"success\");\r\n  }\r\n  const handleExtraSpaces = ()=>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\"\"))\r\n    props.showAlert(\"Extra spaces removed!\",\"success\");\r\n  }\r\n\r\n  function handleOnChange(event) {\r\n    console.log(\"On change\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n\r\n  \r\n  const [text, setText] = useState('');  \r\n  // setText(\"new text\"); // correct way to change the state\r\n  \r\n  return (\r\n      <>\r\n      \r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#081f42'}}>\r\n          <h1>{props.heading}</h1>\r\n          <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#112646':'white', color: props.mode==='dark'?'white':'#112646'}} id=\"myBox\" rows=\"8\"></textarea>\r\n          </div>\r\n          <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n          <button className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n          <button className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n          <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopyClick}>Copy Text</button>\r\n          <button className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Space</button>\r\n        </div>\r\n      <div className=\"container my-3\"  style={{color: props.mode==='dark'?'white':'#081f42'}}>\r\n        <h1>Your text summary </h1>\r\n        <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length}characters</p>\r\n        <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the textbox above to preview here\"}</p>\r\n      </div>\r\n      \r\n      </>\r\n  )\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word)=>{\r\n  const lower = word.toLowerCase();\r\n  return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n\r\n  return (\r\n   <div style={{height: '50px'}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div>}\r\n      </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n\nimport \n{ BrowserRouter as  Router, Routes, Route}\n from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mode is enabled or not \n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = ()=>{\n    if(mode ==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#081f42'\n      showAlert(\"Dark mode has been enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n    }\n  }\n  return (\n    <>\n    <Router>\n          <Navbar title=\"TextChange\" mode={mode} toggleMode={toggleMode}/>\n           <Alert alert={alert}/>\n           <div className=\"container my-3\">\n      <Routes>\n          <Route exact path=\"/about\" element={<About mode={mode}/> } />\n          \n          <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>}/>\n          \n      </Routes>\n        \n          </div>\n    </Router>\n      \n    \n\n    </>\n  \n\n\n\n  );\n}\n\nexport default App;\n\n  \n  \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}